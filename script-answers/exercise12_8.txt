Script started on Sat Jun 29 12:07:36 2024
[?1034hbash-3.2$ docker compose -f docker-compose.dev.yml down --volumesup[Kdown --volumes[C[C[C[C[C[C[C[C[C[C[Kdocker container ls
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                     NAMES
f161c34f3af2   mongo     "docker-entrypoint.sâ€¦"   13 minutes ago   Up 13 minutes   0.0.0.0:3456->27017/tcp   todo-backend-mongo-1
bash-3.2$ docker cont[K[K[K[Kexec -it todo-backend-mongo-1 bash
[?2004hroot@f161c34f3af2:/# mongosh -u root -p example
[?2004l]0;mongosh mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	667feb34557c673570a26a12
Connecting to:		[1m[32mmongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.6[0m
Using MongoDB:		7.0.11
[1m[33mUsing Mongosh[0m:		2.2.6

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

[1G[0J [1G[1m[33m------[0m
   [1m[33mThe server generated these startup warnings when booting[0m
   2024-06-29T10:54:53.513+00:00: /sys/kernel/mm/transparent_hugepage/enabled is 'always'. We suggest setting it to 'never' in this binary version
   2024-06-29T10:54:53.513+00:00: vm.max_map_count is too low
[1m[33m------[0m

[1G[0Jtest> [7Guse the [1G[0Jtest> use the[14G[1G[0Jtest> use th[13G[1G[0Jtest> use t[12G[1G[0Jtest> use [11G[1G[0Jtest> use[10G[1G[0Jtest> us[9G[1G[0Jtest> u[8G[1G[0Jtest> [7Gshow dbs
[1madmin[0m         100.00 KiB
[1mconfig[0m         72.00 KiB
[1mlocal[0m          72.00 KiB
[1mthe_database[0m   56.00 KiB
[1G[0Jtest> [7Guse the_database
switched to db the_database
[1G[0Jthe_database> [15Gshow collec[1G[0Jthe_database> show colle[25G[1G[0Jthe_database> show coll[24G[1G[0Jthe_database> show col[23G[1G[0Jthe_database> show co[22G[1G[0Jthe_database> show c[21G[1G[0Jthe_database> show [20G[1G[0Jthe_database> show[19G[1G[0Jthe_database> sho[18G[1G[0Jthe_database> sh[17G[1G[0Jthe_database> s[16G[1G[0Jthe_database> [15Gdb.todos({})[1G[0Jthe_database> db.todos({}[26G[1G[0Jthe_database> db.todos({[25G[1G[0Jthe_database> db.todos([24G[1G[0Jthe_database> db.todos[23G.find({{([1G[0Jthe_database> db.todos.find({{[31G[1G[0Jthe_database> db.todos.find({[30G})
[
  {
    _id: ObjectId([32m'667a5677c10da31a03a26a13'[39m),
    text: [32m'Write great code!'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'667a5677c10da31a03a26a14'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gdb.todos.insertOne({ text[33mtext[39m: Increa[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: Incre[47G[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: Incr[46G[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: Inc[45G[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: In[44G[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: I[43G[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: [42G[32m'[39m[32mI[39m[32mN[39m[32mc[39m[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: [32m'IN[39m[45G[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: [32m'I[39m[44G[32mn[39m[32mc[39m[32mr[39m[32me[39m[32ma[39m[32ms[39m[32me[39m [32mt[39m[32mh[39m[32me[39m [32mn[39m[32mu[39m[32mm[39m[32mb[39m[32me[39m[32mr[39m [32mo[39m[32mf[39m [32mt[39m[32mo[39m[32mo[39m[32ml[39m[32ms[39m [32mi[39m[32mn[39m [32mm[39m[32my[39m [32mt[39m[32mo[39m[32mo[39m[32ml[39m [32mb[39m[32me[39m[32ml[39m[32mt[39m[32m"[39m[32m,[39m [1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: [32m'Increase the number of tools in my tool belt",[39m[89G[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: [32m'Increase the number of tools in my tool belt"[39m[88G[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: [32m'Increase the number of tools in my tool belt[39m[87G[32m'[39m, d[36mdo[39mdone: fals[33mfalse[39m})
{
  acknowledged: [33mtrue[39m,
  insertedId: ObjectId([32m'667fede1557c673570a26a13'[39m)
}
[1G[0Jthe_database> [15G[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: [32m'Increase the number of tools in my tool belt'[39m, [33mdone[39m: [33mfalse[39m})[103G[1G[0Jthe_database> db.todos.find({})[32G
[
  {
    _id: ObjectId([32m'667a5677c10da31a03a26a13'[39m),
    text: [32m'Write great code!'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'667a5677c10da31a03a26a14'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'667fede1557c673570a26a13'[39m),
    text: [32m'Increase the number of tools in my tool belt'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gexit
[?2004hroot@f161c34f3af2:/# exit
[?2004lexit
[1m
What's next:[0m
    Try Docker Debug for seamless, persistent debugging tools in any container or image â†’ [36mdocker debug todo-backend-mongo-1[0m
    Learn more at https://docs.docker.com/go/debug-cli/
bash-3.2$ exit
exit

Script done on Sat Jun 29 12:20:23 2024
